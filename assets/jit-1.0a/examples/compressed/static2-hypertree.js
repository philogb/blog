var Log={elem:$("log"),write:function(A){if(!this.elem){this.elem=$("log")}this.elem.set("html",A)}};function init(){var D;Infovis.initLayout();var I=$("infovis");var H=I.offsetWidth,E=I.offsetHeight;var B,A,F;var C=new Canvas("mycanvas",{injectInto:"infovis",width:H,height:E,styles:{fillStyle:"#ddd",strokeStyle:"#dd00bb"}});Config.allowVariableNodeDiameters=true;Config.nodeRangeDiameters={min:10,max:35};Config.nodeRangeValues={min:1,max:35};Config.transformNodes=false;var J=[{id:"node0",name:"node0 name",data:[{key:"weight",value:16.759175934208628},{key:"some other key",value:"some other value"}],adjacencies:[{nodeTo:"node1",data:{weight:3}},{nodeTo:"node2",data:{weight:3}},{nodeTo:"node3",data:{weight:3}},{nodeTo:"node4",data:{weight:1}},{nodeTo:"node5",data:{weight:1}}]},{id:"node1",name:"node1 name",data:[{key:"weight",value:13.077119090372014},{key:"some other key",value:"some other value"}],adjacencies:[{nodeTo:"node0",data:{weight:3}},{nodeTo:"node2",data:{weight:1}},{nodeTo:"node3",data:{weight:3}},{nodeTo:"node4",data:{weight:1}},{nodeTo:"node5",data:{weight:1}}]},{id:"node2",name:"node2 name",data:[{key:"weight",value:24.937383149648717},{key:"some other key",value:"some other value"}],adjacencies:[{nodeTo:"node0",data:{weight:3}},{nodeTo:"node1",data:{weight:1}},{nodeTo:"node3",data:{weight:3}},{nodeTo:"node4",data:{weight:3}},{nodeTo:"node5",data:{weight:1}}]},{id:"node3",name:"node3 name",data:[{key:"weight",value:10.53272740718869},{key:"some other key",value:"some other value"}],adjacencies:[{nodeTo:"node0",data:{weight:3}},{nodeTo:"node1",data:{weight:3}},{nodeTo:"node2",data:{weight:3}},{nodeTo:"node4",data:{weight:1}},{nodeTo:"node5",data:{weight:3}}]},{id:"node4",name:"node4 name",data:[{key:"weight",value:1.3754347037767345},{key:"some other key",value:"some other value"}],adjacencies:[{nodeTo:"node0",data:{weight:1}},{nodeTo:"node1",data:{weight:1}},{nodeTo:"node2",data:{weight:3}},{nodeTo:"node3",data:{weight:1}},{nodeTo:"node5",data:{weight:3}}]},{id:"node5",name:"node5 name",data:[{key:"weight",value:32.26403873194912},{key:"some other key",value:"some other value"}],adjacencies:[{nodeTo:"node0",data:{weight:1}},{nodeTo:"node1",data:{weight:1}},{nodeTo:"node2",data:{weight:1}},{nodeTo:"node3",data:{weight:3}},{nodeTo:"node4",data:{weight:3}}]}];var G=new Hypertree(C,{onBeforePlotLine:function(K){D=C.getCtx().lineWidth;C.getCtx().lineWidth=K.data.weight},onAfterPlotLine:function(K){C.getCtx().lineWidth=D},onBeforeCompute:function(K){Log.write("centering")},onCreateLabel:function(M,K){var L=$(M);L.set("tween",{duration:300}).setOpacity(0.8).set("html",K.name).addEvents({click:function(N){G.onClick(L.id)},mouseenter:function(){L.tween("opacity",1)},mouseleave:function(){L.tween("opacity",0.8)}})},onPlaceLabel:function(K,N){var M=K.offsetWidth;var L=K.style.left.toInt();L-=M/2;K.style.left=L+"px"},onAfterCompute:function(){Log.write("done");var L=GraphUtil.getClosestNodeToOrigin(G.graph,"pos");var K="<h4>"+L.name+"</h4><b>Connections:</b>";K+="<ul>";GraphUtil.eachAdjacency(L,function(M){var N=M.nodeTo;K+="<li>"+N.name+"</li>"});K+="</ul>";$("inner-details").set("html",K)}});G.loadGraphFromJSON(J,2);G.refresh();G.controller.onBeforeCompute(GraphUtil.getNode(G.graph,G.root));G.controller.onAfterCompute()};
